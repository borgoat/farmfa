openapi: "3.0.0"
info:
  version: 0.2.0
  title: farMFA
  description: An API to manage TOTP with shared secrets
  contact:
    name: Giorgio Azzinnaro
    email: giorgio@azzinna.ro
    url: https://giorgio.azzinna.ro
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://farmfa.example.com/v1alpha1
  - url: /

tags:
  - name: core
    description: This functionality is mandatory to implement the _farMFA_ specs
  - name: optional
    description: Additional functionality that is not strictly required
  - name: session
    description: Actions related to _sessions_ - the core workflow where an applicant joins Tocs to reconstruct a TOTP

paths:
  #region paths/session
  /sessions:
    post:
      tags:
        - core
        - session
      summary: Start a new session
      description: |
        A session describes the workflow in which an applicant requires combining Tocs to generate a TOTP.
        The applicant must already have a Toc.
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSession'
      responses:
        default:
          $ref: '#/components/responses/DefaultError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionCredentials'

  /sessions/{id}:
    get:
      tags:
        - core
        - session
      summary: Retrieve a session details by its ID
      operationId: getSession
      parameters:
        - name: id
          in: path
          description: ID of session to retrieve
          required: true
          schema:
            type: string
      responses:
        default:
          $ref: '#/components/responses/DefaultError'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'

  /sessions/{id}/tocs:
    post:
      tags:
        - core
        - session
      summary: Join a new Toc to an existing session
      operationId: postToc
      parameters:
        - name: id
          in: path
          description: ID of session for which to add the Toc
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToc'
      responses:
        default:
          $ref: '#/components/responses/DefaultError'
        '200':
          description: OK

  /sessions/{id}/totp:
    post:
      summary: Close the session and generate the TOTP
      operationId: generateTotp
      tags:
        - core
        - session
      parameters:
        - name: id
          in: path
          description: ID of session for which to generate the TOTP
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionKeyEncryptionKey'
        required: true
      responses:
        default:
          $ref: '#/components/responses/DefaultError'
        # TODO: not yet ready error
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPCode'
  #endregion paths/session

components:
  schemas:
    #region components.schemas/session
    NewSession:
      type: object
      properties:
        toc_zero:
          $ref: '#/components/schemas/Toc'
        ttl:
          type: integer
          minimum: 60
          maximum: 86400
          default: 60
          description: Seconds until the TOTP generation endpoint expires, starting from the first TOTP generated.
      required:
        - toc_zero

    SessionCredentials:
      type: object
      description: |
        Returned when creating a new Session.
        This object should be kept secret by the applicant, and used when generating the TOTP.
      allOf:
        - $ref: '#/components/schemas/Session'
        - $ref: '#/components/schemas/SessionTocEncryptionKey'
        - $ref: '#/components/schemas/SessionKeyEncryptionKey'

    SessionTocEncryptionKey:
      type: object
      properties:
        tek:
          type: string
          description: |
            A public key used by constituents to encrypt their Tocs before sharing them with the oracle.
            The applicant receives it when creating a sessions,
            and must share it with constituents when requesting their approval.
      required:
        - tek

    SessionKeyEncryptionKey:
      type: object
      properties:
        kek:
          type: string
          format: byte
          description: |
            A key used to encrypt the Toc encryption key held by the oracle.
            This key is kept by the applicant and shared when a TOTP is generated.
      required:
        - kek

    Session:
      type: object
      properties:
        id:
          type: string
          description: The identifier of a session
        toc_group_id:
          type: string
          description: An identifier for the group of Tocs used in this session
        expires_at:
          type: string
          format: date-time
          description: When the sessions will expire and no longer accept Tocs
        created_at:
          type: string
          format: date-time
          description: The time when the session started
        ttl:
          type: integer
          minimum: 60
          maximum: 86400
          description: Seconds until the TOTP generation endpoint expires, starting from the first token generated.
        complete:
          type: boolean
          description: True when enough Tocs have been provided and TOTPs may be generated
        tocs_in_group:
          type: integer
          minimum: 2
          description: The total number of Tocs in the group
        tocs_threshold:
          type: integer
          minimum: 2
          description: The minimum number of Tocs required
        tocs_provided:
          type: integer
          minimum: 1
          description: The number of Tocs already provided by consituents to the oracle for this session
      required:
        - id
        - toc_group_id
        - created_at
        - complete
        - tocs_in_group
        - tocs_threshold
        - tocs_provided

    AddToc:
      type: object
      properties:
        encrypted_toc:
          type: string
          description: The constituent's Toc encrypted with the session's public key
      required:
        - encrypted_toc

    Toc:
      description: A Toc is a "piece" in which a TOTP secret gets split.
      type: object
      properties:
        toc_id:
          type: string
          description: A Toc is unique, this ID ensures a Toc is not reused
        group_id:
          type: string
          description: Each Toc is part of a group. Tocs from the same group can reconstruct a secret
        group_size:
          type: integer
          description: The number of Tocs in the group
          minimum: 2
        group_threshold:
          type: integer
          description: The nubmer of Tocs needed to reconstruct the secret
          minimum: 2
        note:
          type: string
          description: Free-text to describe the purpose of a Toc
        share:
          type: string
          description: The actual share that players should keep secret
      required:
        - toc_id
        - group_id
        - group_size
        - group_threshold
        - share

    TOTPCode:
      type: object
      properties:
        totp:
          type: string
          pattern: '^\d{6}$'
          description: The current TOTP
        totp_expires_at:
          type: string
          format: date-time
          description: The time when the current TOTP will expire
        session_expires_at:
          type: string
          format: date-time
          description: The time when this session will expire and cannot be called again
      required:
        - totp
        - totp_expires_at
        - session_expires_at
    #endregion components.schemas/session

# All errors
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - InvalidTOTPSecret
        message:
          type: string
  responses:
    DefaultError:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
